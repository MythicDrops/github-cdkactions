{"version":3,"file":"github-cdkactions.esm.js","sources":["../src/GradlePluginPullRequestWorkflow.ts","../src/GradlePluginPrepareForReleaseWorkflow.ts","../src/GradlePluginReleaseWorkflow.ts"],"sourcesContent":["import { Job, Workflow } from \"cdkactions\";\nimport { Construct } from \"constructs\";\nimport dedent from \"ts-dedent\";\n\nexport class GradlePluginPullRequestWorkflow extends Workflow {\n  constructor(scope: Construct) {\n    super(scope, \"pull-request\", {\n      name: \"Pull Request\",\n      on: {\n        pullRequest: { branches: [\"main\"] },\n        push: { branchesIgnore: [\"main\"] },\n      },\n    });\n\n    new Job(this, \"pull-request\", {\n      name: \"CI\",\n      runsOn: \"ubuntu-latest\",\n      strategy: {\n        matrix: {\n          gradle: [\"6.7.1\", \"6.8.2\"],\n          java: [\"1.8\", \"11\", \"15\"],\n        },\n      },\n      steps: [\n        {\n          name: \"Check-out Code\",\n          uses: \"actions/checkout@v2\",\n          with: { \"fetch-depth\": \"0\" },\n        },\n        {\n          name: \"Set up JDK\",\n          uses: \"actions/setup-java@v1\",\n          with: { \"java-version\": `\\${{ matrix.java }}` },\n        },\n        {\n          name: \"Make Gradle Wrapper Executable\",\n          run: dedent`chmod +x ./gradlew`,\n        },\n        {\n          name: \"Set Gradle Version\",\n          run: dedent`./gradlew wrapper --gradle-version \\${{ matrix.gradle }}`,\n        },\n        {\n          name: \"Test Plugin Directly with Gradle\",\n          run: dedent`../gradlew check`,\n          workingDirectory: \"pixeloutlaw-gradle-plugin\",\n        },\n        {\n          name: \"Test Plugin Application with Gradle\",\n          run: dedent`./gradlew check`,\n        },\n      ],\n    });\n  }\n}\n","import { Job, Workflow } from \"cdkactions\";\nimport { Construct } from \"constructs\";\nimport dedent from \"ts-dedent\";\n\nexport class GradlePluginPrepareForReleaseWorkflow extends Workflow {\n  constructor(scope: Construct) {\n    super(scope, \"prepare-for-release\", {\n      name: \"Prepare For Release\",\n      on: {\n        push: { branches: [\"main\"] },\n      },\n    });\n\n    new Job(this, \"prepare-for-release\", {\n      name: \"Prepare For Release\",\n      runsOn: \"ubuntu-latest\",\n      steps: [\n        {\n          name: \"Check-out Code\",\n          uses: \"actions/checkout@v2\",\n          with: { \"fetch-depth\": \"0\" },\n        },\n        {\n          name: \"Install GitVersion\",\n          uses: \"gittools/actions/gitversion/setup@v0.9.7\",\n          with: { versionSpec: \"5.x\" },\n        },\n        {\n          name: \"Determine Version\",\n          id: \"gitversion\",\n          uses: \"gittools/actions/gitversion/execute@v0.9.7\",\n        },\n        {\n          name: \"Display GitVersion Outputs\",\n          run: dedent`\n            echo \"Major: \\${{ steps.gitversion.outputs.major }}\"\n            echo \"Minor: \\${{ steps.gitversion.outputs.minor }}\"\n            echo \"Patch: \\${{ steps.gitversion.outputs.patch }}\"\n            echo \"PreReleaseTag: \\${{ steps.gitversion.outputs.preReleaseTag }}\"\n            echo \"PreReleaseTagWithDash: \\${{ steps.gitversion.outputs.preReleaseTagWithDash }}\"\n            echo \"PreReleaseLabel: \\${{ steps.gitversion.outputs.preReleaseLabel }}\"\n            echo \"PreReleaseNumber: \\${{ steps.gitversion.outputs.preReleaseNumber }}\"\n            echo \"WeightedPreReleaseNumber: \\${{ steps.gitversion.outputs.weightedPreReleaseNumber }}\"\n            echo \"BuildMetaData: \\${{ steps.gitversion.outputs.buildMetaData }}\"\n            echo \"BuildMetaDataPadded: \\${{ steps.gitversion.outputs.buildMetaDataPadded }}\"\n            echo \"FullBuildMetaData: \\${{ steps.gitversion.outputs.fullBuildMetaData }}\"\n            echo \"MajorMinorPatch: \\${{ steps.gitversion.outputs.majorMinorPatch }}\"\n            echo \"SemVer: \\${{ steps.gitversion.outputs.semVer }}\"\n            echo \"LegacySemVer: \\${{ steps.gitversion.outputs.legacySemVer }}\"\n            echo \"LegacySemVerPadded: \\${{ steps.gitversion.outputs.legacySemVerPadded }}\"\n            echo \"AssemblySemVer: \\${{ steps.gitversion.outputs.assemblySemVer }}\"\n            echo \"AssemblySemFileVer: \\${{ steps.gitversion.outputs.assemblySemFileVer }}\"\n            echo \"FullSemVer: \\${{ steps.gitversion.outputs.fullSemVer }}\"\n            echo \"InformationalVersion: \\${{ steps.gitversion.outputs.informationalVersion }}\"\n            echo \"BranchName: \\${{ steps.gitversion.outputs.branchName }}\"\n            echo \"EscapedBranchName: \\${{ steps.gitversion.outputs.escapedBranchName }}\"\n            echo \"Sha: \\${{ steps.gitversion.outputs.sha }}\"\n            echo \"ShortSha: \\${{ steps.gitversion.outputs.shortSha }}\"\n            echo \"NuGetVersionV2: \\${{ steps.gitversion.outputs.nuGetVersionV2 }}\"\n            echo \"NuGetVersion: \\${{ steps.gitversion.outputs.nuGetVersion }}\"\n            echo \"NuGetPreReleaseTagV2: \\${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}\"\n            echo \"NuGetPreReleaseTag: \\${{ steps.gitversion.outputs.nuGetPreReleaseTag }}\"\n            echo \"VersionSourceSha: \\${{ steps.gitversion.outputs.versionSourceSha }}\"\n            echo \"CommitsSinceVersionSource: \\${{ steps.gitversion.outputs.commitsSinceVersionSource }}\"\n            echo \"CommitsSinceVersionSourcePadded: \\${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}\"\n            echo \"UncommittedChanges: \\${{ steps.gitversion.outputs.uncommittedChanges }}\"\n            echo \"CommitDate: \\${{ steps.gitversion.outputs.commitDate }}\"\n          `,\n        },\n        {\n          name: \"Set up JDK\",\n          uses: \"actions/setup-java@v1\",\n          with: { \"java-version\": \"1.8\" },\n        },\n        {\n          name: \"Set Gradle Version\",\n          run: dedent`./gradlew wrapper --gradle-version 6.8.2`,\n        },\n        {\n          name: \"Test Plugin Directly with Gradle\",\n          run: dedent`../gradlew check`,\n          workingDirectory: \"pixeloutlaw-gradle-plugin\",\n        },\n        {\n          name: \"Test Plugin Application with Gradle\",\n          run: dedent`./gradlew check`,\n        },\n        {\n          name: \"Push Tag\",\n          uses: \"mathieudutour/github-tag-action@v5.1\",\n          with: {\n            custom_tag: `\\${{ steps.gitversion.outputs.semVer }}`,\n            github_token: `\\${{ secrets.ACTIONS_PAT }}`,\n            tag_prefix: \"\",\n            create_annotated_tag: \"true\",\n          },\n        },\n        {\n          name: \"Publish Plugins to Gradle Plugin Portal\",\n          run: dedent`./gradlew :pixeloutlaw-gradle-plugin:publishPlugins \\\n          -Pversion=\\${{ steps.gitversion.outputs.semVer }} \\\n          -Pgradle.publish.key=\\${{ secrets.GRADLE_PUBLISH_KEY }} \\\n          -Pgradle.publish.secret=\\${{ secrets.GRADLE_PUBLISH_SECRET }}`,\n        },\n      ],\n    });\n  }\n}\n","import { Job, Workflow } from \"cdkactions\";\nimport { Construct } from \"constructs\";\n\nexport class GradlePluginReleaseWorkflow extends Workflow {\n  constructor(scope: Construct) {\n    super(scope, \"release\", {\n      name: \"Create Release\",\n      on: {\n        push: { tags: [\"*\"] },\n      },\n    });\n\n    new Job(this, \"release\", {\n      name: \"Release\",\n      runsOn: \"ubuntu-latest\",\n      steps: [\n        {\n          name: \"Check-out Code\",\n          uses: \"actions/checkout@v2\",\n          with: { \"fetch-depth\": \"0\" },\n        },\n        {\n          name: \"Build Changelog\",\n          id: \"github_release\",\n          uses: \"mikepenz/release-changelog-builder-action@main\",\n          env: {\n            GITHUB_TOKEN: `\\${{ secrets.GITHUB_TOKEN }}`,\n          },\n        },\n        {\n          name: \"Create GitHub Release\",\n          uses: \"actions/create-release@v1\",\n          env: {\n            GITHUB_TOKEN: `\\${{ secrets.GITHUB_TOKEN }}`,\n          },\n          with: {\n            body: `\\${{ steps.github_release.outputs.changelog }}`,\n            release_name: `\\${{ github.ref }}`,\n            tag_name: `\\${{ github.ref }}`,\n          },\n        },\n      ],\n    });\n  }\n}\n"],"names":["GradlePluginPullRequestWorkflow","scope","name","on","pullRequest","branches","push","branchesIgnore","Job","runsOn","strategy","matrix","gradle","java","steps","uses","run","dedent","workingDirectory","Workflow","GradlePluginPrepareForReleaseWorkflow","versionSpec","id","custom_tag","github_token","tag_prefix","create_annotated_tag","GradlePluginReleaseWorkflow","tags","env","GITHUB_TOKEN","body","release_name","tag_name"],"mappings":"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"}